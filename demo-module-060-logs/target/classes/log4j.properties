# Define the root logger with appender file
log4j.rootLogger=DEBUG,ConsoleAppender,FILE
LOG_PATTERN=%d{yyyy-MM-dd HH:mm:ss.SSS} %5p %c:%L - %m%n

### 输出信息到控制抬 ###
log4j.appender.ConsoleAppender=org.apache.log4j.ConsoleAppender
log4j.appender.ConsoleAppender.Target=System.out
log4j.appender.ConsoleAppender.layout=org.apache.log4j.PatternLayout
log4j.appender.ConsoleAppender.layout.ConversionPattern=${LOG_PATTERN}

## Define the file appender
log4j.appender.FILE=org.apache.log4j.FileAppender
#log4j.appender.FileAppender = org.apache.log4j.DailyRollingFileAppender
log4j.appender.FILE.File=./logs/log.out
log4j.appender.FILE.layout=org.apache.log4j.PatternLayout
log4j.appender.FILE.layout.ConversionPattern=${LOG_PATTERN}



##org.apache.log4j.DailyRollingFileAppender每天产生一个日志文件
#log4j.appender.FILE = org.apache.log4j.DailyRollingFileAppender
##此句为定义名为D的输出端的文件名为./WebRoot/logs/info_
#log4j.appender.FILE.File = info_
##Append=true将消息添加的日志文件中而不是覆盖
#log4j.appender.FILE.Append = true
##只输出info级别以上的日志
#log4j.appender.FILE.Threshold = INFO
##此句为定义名为D的输出端的layout是哪种类型，org.apache.log4j.PatternLayout（可以灵活地指定布局模式）
#log4j.appender.FILE.layout = org.apache.log4j.PatternLayout
##每天都按日期生成一个文件
#log4j.appender.FILE.DatePattern = yyyyMMdd'.logs'
##如果使用pattern布局就要指定的打印信息的具体格式ConversionPattern
#log4j.appender.D.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss} [ %p ]  %m%n